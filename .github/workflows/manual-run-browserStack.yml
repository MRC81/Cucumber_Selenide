name: Cucumber Selenide tests CI - manual (BrowserStack)

on:
  workflow_call:
    inputs:
      BROWSER:
        type: string

  workflow_dispatch:
    inputs:
      BROWSER:
        type: choice
        required: true
        description: Select supported browser
        options:
          - chrome
          - firefox
          - edge
        default: chrome

permissions:
  contents: write
  pages: write
  id-token: write
  checks: write

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      BROWSER: ${{ steps.prepare.outputs.BROWSER }}
      ALLURE_LINK: ${{ steps.prepare.outputs.ALLURE_LINK }}

    steps:
      - name: Prepare
        id: prepare
        run: |
          echo "BROWSER=${{ inputs.BROWSER }}" >> $GITHUB_OUTPUT
          echo "ALLURE_LINK=https://mrc81.github.io/Cucumber_Selenide" >> $GITHUB_OUTPUT

      - name: Adding markdown
        run: |
          echo "- BROWSER: ${{ steps.prepare.outputs.BROWSER }}" >> $GITHUB_STEP_SUMMARY

      - name: 'BrowserStack Env Setup'  # Invokes the setup-env action
        uses: browserstack/github-actions/setup-env@master
        with:
          username:  ${{ secrets.BROWSERSTACK_USERNAME }}
          access-key: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}
      - name: 'BrowserStack Local Tunnel Setup'  # Invokes the setup-local action
        uses: browserstack/github-actions/setup-local@master
        with:
          local-testing: start
          local-identifier: random

  run_tests:
    runs-on: ubuntu-latest
    needs: [ prepare ]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4.1.1

      - name: Setup JDK 17
        uses: actions/setup-java@v4.2.1
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build and Test with Gradle
        if: always()
        run: |
          ./gradlew clean test -Dmode=CLOUD_BROWSERSTACK -Dselenide.browser="${{ inputs.BROWSER }}"
        continue-on-error: true

      - name: add Env params to Allure report
        shell: bash
        run: |
          echo "BROWSER=${{ inputs.BROWSER }}" >> allure-results/environment.properties

      - name: Publish JUnit Test Report
        uses: mikepenz/action-junit-report@v4
        if: success() || failure() # always run even if the previous step fails
        with:
          report_paths: '**/build/test-results/test/TEST-*.xml'

      - name: Get Allure history
        uses: actions/checkout@v4.1.1
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: Allure Report action from marketplace
        uses: simple-elf/allure-report-action@master
        if: always()
        id: allure-report
        with:
          allure_results: allure-results
          gh_pages: gh-pages
          allure_report: allure-report
          allure_history: allure-history

      - name: Deploy report to Github Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v4.0.0

        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: allure-history

      - name: Adding markdown
        run: |
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Allure report has been generated" >> $GITHUB_STEP_SUMMARY
          echo "- URL: ${{ needs.prepare.outputs.ALLURE_LINK }}" >> $GITHUB_STEP_SUMMARY
